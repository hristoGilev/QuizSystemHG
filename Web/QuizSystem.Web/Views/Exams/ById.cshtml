@model QuizSystem.Web.ViewModels.Exams.ExamViewModel
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@using QuizSystem.Data.Models
@using Microsoft.AspNetCore.Identity
@{
    this.ViewData["Title"] = Model.Name;
}

<h7 class="display-4">@Model.Name</h7>

<div class="card">
    <div class="card-header alert-info">
        @Model.Description
    </div>
    <div class="card-body">
        @foreach (var item in Model.Questions)
        {
            {
                <h4 class="media-heading"><a asp-controller="Questions" asp-action="ById" asp-route-id="@item.Id">@item.Title</a></h4>
            }
        }
        @foreach (var item in Model.QuestionMultiSelects)
        {
    <h4 class="media-heading"><a asp-controller="QuestionsMultiSelect" asp-action="ById" asp-route-id="@item.Id">@item.Title</a></h4>
        }
    </div>
    <div class="card-footer">
        @{

            var parms = new Dictionary<string, string>
            {
                { "id", Model.Id.ToString() },

            };
        }

        <nav>


            @if (this.User.IsInRole("Moderator") || this.User.IsInRole("Administrator"))
            {
                <ul class="navbar-nav ">
                    <li class="nav-item d-inline">
                        <h4><a asp-controller="ExamUsers" asp-action="AddUsersToExam" asp-all-route-data="parms">Add user to exam</a></h4>
                    </li>

                    <li class="nav-item d-inline ">
                        <h4><a asp-controller="Exams" asp-action="DeleteExam" asp-all-route-data="parms">Delete exam</a></h4>

                    </li>


                </ul>

            }
        </nav>      

    </div>

   

</div>
